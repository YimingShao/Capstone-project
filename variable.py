import pygame
import parameters
from gentopology import createsnc
from GameEnv import GameEnv
from collections import deque

pa = parameters.Parameters()
snc = createsnc(pa.num_machines)
env = None

current_job = None
current_page = 0
job_i = 0

def set_job_i(i):
    global job_i
    job_i = i

def set_current_page(p):
    global current_page
    current_page = p

def set_current_job(j):
    global current_job
    current_job = j

def get_job_i():
    return job_i

def get_current_page():
    return current_page

def get_current_job():
    return current_job
def create_env(jobqueue):
    global env
    env = GameEnv(pa, snc, jobqueue)

def get_env():
    return env

speed_img = pygame.image.load("assets/speed.png")

BACKGROUND_COLOR = (245, 240, 223)
BACKGROUND_RGBA = (245/255, 240/255, 223/255, 1)
JOB_SELECTED_COLOR = (117, 18, 57)
JUST_PICKED_UP_COLOR = (51, 41, 45)
SPEED_COLOR = (104, 156, 110)
SPEED_RGBA = (104/255, 156/255, 110/255, 1)
JOB_SIZE_COLOR = (191, 70, 40)
JOB_SIZE_RGBA = (191/255, 70/255, 40/255, 1)
GPU_REQUIRMENT_COLOR = (120, 90, 120)
GPU_REQUIRMENT_RGBA = (120/255, 90/255, 120/255, 1)
RUNNING_COLOR = (74, 181, 105)
PROGRESS_BAR_COLOR = (73, 107, 133)
JOB_STOP_COLOR = (173, 7, 35)
RACK_SELECTED_COLOR = (138, 79, 59)
QUEUE_SELECTED_COLOR = (55, 82, 67)

UNIT_LENGTH = 1000
SCREEN_WIDTH = int(1.5 * UNIT_LENGTH)
SCREEN_HEIGHT = int(0.9 * UNIT_LENGTH)

# CLUSTER attributes
CLUSTER_SPACE = int(0.015 * UNIT_LENGTH)       # The space between clusters
CLUSTER_BORDER = int(0.005 * UNIT_LENGTH)
CLUSTER_BORDER_SELECTED = int(CLUSTER_BORDER * 2)    # The border size when it is selected
CLUSTER_WIDTH = int((0.65 * SCREEN_WIDTH)/2)
CLUSTER_HEIGHT = int((SCREEN_HEIGHT/2) * 0.95)

# QUEUE attributes
QUEUE_X = int(0.78 * SCREEN_WIDTH)
QUEUE_BORDER = int(0.005 * UNIT_LENGTH)
QUEUE_WIDTH = int(0.2 * SCREEN_WIDTH)
QUEUE_HEIGHT = int(2 * CLUSTER_HEIGHT + CLUSTER_SPACE)
QUEUE_BORDER_SELECTED = (QUEUE_BORDER * 2)

# SIDE_VIEW attributes
SIDE_VIEW_X = int(CLUSTER_SPACE * 3 + 2 * CLUSTER_WIDTH)
SIDE_VIEW_Y = int(CLUSTER_SPACE + 0.1 * QUEUE_HEIGHT)
SIDE_VIEW_HEIGHT = int(0.8 * QUEUE_HEIGHT)
SIDE_VIEW_WIDTH = int(QUEUE_X - SIDE_VIEW_X - CLUSTER_SPACE)
SIDE_VIEW_BORDER = int(0.001 * UNIT_LENGTH)

# PREVIEW_PAGE attributes
PREVIEW_SPACE = int(0.015 * UNIT_LENGTH)
PREVIEW_WIDTH = int(SIDE_VIEW_WIDTH - 2 * PREVIEW_SPACE)
PREVIEW_HEIGHT = int((SIDE_VIEW_HEIGHT - 5 * PREVIEW_SPACE)/4)
PREVIEW_BORDER = int(0.003 * UNIT_LENGTH)
PREVIEW_BORDER_SELECTED = int(0.009 * UNIT_LENGTH)

PREVIEW_JOB_SPACE = int(0.1 * PREVIEW_WIDTH)
PREVIEW_JOB_X = PREVIEW_JOB_SPACE
PREVIEW_JOB_HEIGHT = int((PREVIEW_HEIGHT - 9 * PREVIEW_JOB_SPACE)/8)
PREVIEW_JOB_WIDTH = int((PREVIEW_WIDTH - 2 * PREVIEW_JOB_SPACE)/4)
PREVIEW_JOB_RUNNING_X = int(PREVIEW_JOB_X + PREVIEW_JOB_SPACE)
PREVIEW_JOB_RUNNING_Y = int(PREVIEW_JOB_SPACE)

# DEVICE attributes
DEVICE_SPACE_FROM_CLUSTER = 0.12 * CLUSTER_HEIGHT
DEVICE_SPACE_VER = int(0.015 * UNIT_LENGTH)
DEVICE_SPACE_COL = int(0.02 * UNIT_LENGTH)
DEVICE_WIDTH = int((CLUSTER_WIDTH - 5 * DEVICE_SPACE_COL)/4)
DEVICE_HEIGHT = int((CLUSTER_HEIGHT - 5 * DEVICE_SPACE_VER - DEVICE_SPACE_FROM_CLUSTER)/4)
DEVICE_BORDER = int(0.005 * UNIT_LENGTH)
DEVICE_BORDER_SELECTED = int(DEVICE_BORDER * 1.5)

# GPU attributes
GPU_SPACE = int(0.005 * UNIT_LENGTH)
GPU_SPACE_TOP = int(DEVICE_HEIGHT/2 + 0.01 * UNIT_LENGTH)
GPU_WIDTH = int((DEVICE_WIDTH - 5 * GPU_SPACE)/4)
GPU_HEIGHT = GPU_WIDTH
GPU_BORDER = int(0.003 * UNIT_LENGTH)
GPU_BORDER_SELECTED = int(0.005 * UNIT_LENGTH)

# CPU attributes
CPU_Y = int(0.4 * DEVICE_HEIGHT)
CPU_X = int(DEVICE_WIDTH/4)
CPU_RADIUS = int(0.008 * UNIT_LENGTH)
CPU_BORDER = int(0.002 * UNIT_LENGTH)

# JOB attributes
JOB_SPACE = 0.01 * UNIT_LENGTH
JOB_WIDTH = int(QUEUE_WIDTH - 2 * JOB_SPACE)
JOB_HEIGHT = int((QUEUE_HEIGHT - 9 * JOB_SPACE) / 8)
JOB_BORDER = int(0.005 * UNIT_LENGTH)
JOB_BORDER_SELECTED = int(0.009 * UNIT_LENGTH)

RUNNING_CIRCLE_X = int(0.03 * JOB_WIDTH)
RUNNING_CIRCLE_WIDTH = int(0.6 * JOB_HEIGHT)
RUNNING_CIRCLE_Y = int(0.2* JOB_HEIGHT)

ASSET_X = int(RUNNING_CIRCLE_X + RUNNING_CIRCLE_WIDTH + 0.03 * JOB_WIDTH)
ASSET_Y = int(0.1 * JOB_HEIGHT)
ASSET_WIDTH = int(0.5 * JOB_HEIGHT)
ASSET_HEIGHT = int(0.8 * JOB_HEIGHT)

GPU_GRID_X = int(ASSET_X + ASSET_WIDTH + 0.03 * JOB_WIDTH)
GPU_GRID_Y = ASSET_Y
# GPU_GRID_WIDTH = int(0.25 * JOB_WIDTH)
GPU_GRID_HEIGHT = ASSET_HEIGHT
GPU_GRID_WIDTH = GPU_GRID_HEIGHT
GPU_GRID_BORDER = int(0.003 * UNIT_LENGTH)

SPEED_X = int(GPU_GRID_X + GPU_GRID_WIDTH + 0.03 * JOB_WIDTH)
SPEED_Y = ASSET_Y
SPEED_WIDTH = int(ASSET_WIDTH*1.2)
SPEED_HEIGHT = int(0.5 * JOB_HEIGHT)

JOB_SIZE_X = SPEED_X
JOB_SIZE_Y = int(SPEED_Y + SPEED_HEIGHT + 0.1 * JOB_HEIGHT)
JOB_SIZE_WIDTH = SPEED_WIDTH
JOB_SIZE_HEIGHT = int(ASSET_Y + ASSET_HEIGHT - JOB_SIZE_Y )
JOB_SIZE_BORDER = int(0.003 * UNIT_LENGTH)

SPEED_ORIGIN_X = int(SPEED_X + SPEED_WIDTH/2)
SPEED_ORIGIN_Y = (SPEED_Y + SPEED_HEIGHT - 0.01 * JOB_HEIGHT)
SPEED_RADIUS = int(SPEED_WIDTH * 0.3)


